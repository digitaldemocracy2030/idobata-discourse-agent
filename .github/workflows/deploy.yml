name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGION: asia-northeast1
  SERVICE_NAME: discourse-bot

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          token_format: 'access_token'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          gcloud auth configure-docker

      - name: Retrieve and Decode OIDC Token
        run: |
          # OIDC トークンを取得する
          TOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL")
          echo "$TOKEN" | cut -d. -f2 | base64 --decode | jq .

      - name: Build and Push Container
        run: |-
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${{ github.sha }}
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${{ github.sha }} ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:latest
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:latest

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${{ github.sha }}
          env_vars: |
            DISCOURSE_API_KEY=${{ secrets.DISCOURSE_API_KEY }}
            DISCOURSE_API_USERNAME=${{ secrets.DISCOURSE_API_USERNAME }}
            DISCOURSE_URL=${{ secrets.DISCOURSE_URL }}