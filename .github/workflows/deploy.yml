name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-northeast1
  SERVICE_NAME: discourse-bot

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Get OIDC token
        id: get-oidc-token
        uses: actions/github-script@v7
        with:
          script: |
            const token = await core.getIDToken('https://iam.googleapis.com/');
            core.setOutput('token', token);

      - name: Authenticate to Google Cloud
        env:
          WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WIF_PROVIDER }}
          SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          OIDC_TOKEN: ${{ steps.get-oidc-token.outputs.token }}
        run: |
          curl -H "Authorization: Bearer ${OIDC_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{
              \"audience\": \"${WORKLOAD_IDENTITY_PROVIDER}\",
              \"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\",
              \"requested_token_type\": \"urn:ietf:params:oauth:token-type:access_token\",
              \"scope\": \"https://www.googleapis.com/auth/cloud-platform\",
              \"subject_token_type\": \"urn:ietf:params:oauth:token-type:id_token\",
              \"subject_token\": \"${OIDC_TOKEN}\"
            }" \
            "https://sts.googleapis.com/v1/token" > token.json
          ACCESS_TOKEN=$(jq -r .access_token token.json)
          echo "GOOGLE_ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV
          rm token.json

      - name: Configure Docker authentication
        env:
          GOOGLE_ACCESS_TOKEN: ${{ env.GOOGLE_ACCESS_TOKEN }}
        run: |
          echo $GOOGLE_ACCESS_TOKEN | docker login -u oauth2accesstoken --password-stdin ${REGION}-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -t ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${{ github.sha }} .
          docker push ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${{ github.sha }}
          docker tag ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${{ github.sha }} ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:latest
          docker push ${REGION}-docker.pkg.dev/${{ env.PROJECT_ID }}/${SERVICE_NAME}-repo/${SERVICE_NAME}:latest

      - name: Deploy to Cloud Run
        env:
          GOOGLE_ACCESS_TOKEN: ${{ env.GOOGLE_ACCESS_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${GOOGLE_ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{
              \"apiVersion\": \"serving.knative.dev/v1\",
              \"kind\": \"Service\",
              \"metadata\": {
                \"name\": \"${SERVICE_NAME}\"
              },
              \"spec\": {
                \"template\": {
                  \"spec\": {
                    \"containers\": [{
                      \"image\": \"${REGION}-docker.pkg.dev/${PROJECT_ID}/${SERVICE_NAME}-repo/${SERVICE_NAME}:${GITHUB_SHA}\",
                      \"env\": [
                        {\"name\": \"DISCOURSE_API_KEY\", \"value\": \"${{ secrets.DISCOURSE_API_KEY }}\"},
                        {\"name\": \"DISCOURSE_API_USERNAME\", \"value\": \"${{ secrets.DISCOURSE_API_USERNAME }}\"},
                        {\"name\": \"DISCOURSE_URL\", \"value\": \"${{ secrets.DISCOURSE_URL }}\"}
                      ]
                    }]
                  }
                }
              }
            }" \
            "https://run.googleapis.com/v1/projects/${PROJECT_ID}/locations/${REGION}/services"